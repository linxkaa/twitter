// Mocks generated by Mockito 5.0.16 from annotations
// in twitter/test/application/update_tweet/update_tweet_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:twitter/domain/core/failure/app_failure.dart' as _i5;
import 'package:twitter/domain/core/interfaces/i_tweet_repositories.dart'
    as _i3;
import 'package:twitter/infrastructure/dtos/user_all_tweets_model.dart' as _i6;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [ITweetRepositories].
///
/// See the documentation for Mockito's code generation for more information.
class MockITweetRepositories extends _i1.Mock
    implements _i3.ITweetRepositories {
  @override
  _i4.Future<_i2.Either<_i5.AppFailure, _i2.Unit>> updateTweet(
          {_i6.TweetModel? newMod, _i6.TweetModel? oldMod}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #updateTweet, [], {#newMod: newMod, #oldMod: oldMod}),
              returnValue: Future<_i2.Either<_i5.AppFailure, _i2.Unit>>.value(
                  _FakeEither_0<_i5.AppFailure, _i2.Unit>()))
          as _i4.Future<_i2.Either<_i5.AppFailure, _i2.Unit>>);
  @override
  _i4.Future<_i2.Either<_i5.AppFailure, _i2.Unit>> deleteTweedByUniqueId(
          {_i6.TweetModel? mod}) =>
      (super.noSuchMethod(
              Invocation.method(#deleteTweedByUniqueId, [], {#mod: mod}),
              returnValue: Future<_i2.Either<_i5.AppFailure, _i2.Unit>>.value(
                  _FakeEither_0<_i5.AppFailure, _i2.Unit>()))
          as _i4.Future<_i2.Either<_i5.AppFailure, _i2.Unit>>);
  @override
  _i4.Future<_i2.Either<_i5.AppFailure, _i2.Unit>> sendNewTweets(
          {String? userId,
          String? name,
          String? email,
          String? profilePicture,
          _i6.TweetModel? mod}) =>
      (super.noSuchMethod(
              Invocation.method(#sendNewTweets, [], {
                #userId: userId,
                #name: name,
                #email: email,
                #profilePicture: profilePicture,
                #mod: mod
              }),
              returnValue: Future<_i2.Either<_i5.AppFailure, _i2.Unit>>.value(
                  _FakeEither_0<_i5.AppFailure, _i2.Unit>()))
          as _i4.Future<_i2.Either<_i5.AppFailure, _i2.Unit>>);
  @override
  _i4.Stream<_i6.UserAllTweetsModel> getUserTweets({String? userId}) =>
      (super.noSuchMethod(
              Invocation.method(#getUserTweets, [], {#userId: userId}),
              returnValue: Stream<_i6.UserAllTweetsModel>.empty())
          as _i4.Stream<_i6.UserAllTweetsModel>);
  @override
  String toString() => super.toString();
}
