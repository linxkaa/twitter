// Mocks generated by Mockito 5.0.16 from annotations
// in twitter/test/infrastructure/repositories/auth_repositories_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i6;

import 'package:cloud_firestore/cloud_firestore.dart' as _i2;
import 'package:firebase_auth/firebase_auth.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:twitter/infrastructure/data_sources/firebase_data_sources.dart'
    as _i5;
import 'package:twitter/infrastructure/dtos/user_all_tweets_model.dart' as _i7;
import 'package:twitter/infrastructure/dtos/user_model.dart' as _i4;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeFirebaseFirestore_0 extends _i1.Fake
    implements _i2.FirebaseFirestore {}

class _FakeFirebaseAuth_1 extends _i1.Fake implements _i3.FirebaseAuth {}

class _FakeUserModel_2 extends _i1.Fake implements _i4.UserModel {}

class _FakeFirebaseUserModel_3 extends _i1.Fake
    implements _i4.FirebaseUserModel {}

/// A class which mocks [FirebaseDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseDataSource extends _i1.Mock
    implements _i5.FirebaseDataSource {
  MockFirebaseDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.FirebaseFirestore get firebaseFirestore =>
      (super.noSuchMethod(Invocation.getter(#firebaseFirestore),
          returnValue: _FakeFirebaseFirestore_0()) as _i2.FirebaseFirestore);
  @override
  set firebaseFirestore(_i2.FirebaseFirestore? _firebaseFirestore) => super
      .noSuchMethod(Invocation.setter(#firebaseFirestore, _firebaseFirestore),
          returnValueForMissingStub: null);
  @override
  _i3.FirebaseAuth get firebaseAuth =>
      (super.noSuchMethod(Invocation.getter(#firebaseAuth),
          returnValue: _FakeFirebaseAuth_1()) as _i3.FirebaseAuth);
  @override
  set firebaseAuth(_i3.FirebaseAuth? _firebaseAuth) =>
      super.noSuchMethod(Invocation.setter(#firebaseAuth, _firebaseAuth),
          returnValueForMissingStub: null);
  @override
  _i6.Future<void> initialize() =>
      (super.noSuchMethod(Invocation.method(#initialize, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i6.Future<void>);
  @override
  _i6.Future<void> registerManual({String? email, String? pwd, String? name}) =>
      (super.noSuchMethod(
          Invocation.method(
              #registerManual, [], {#email: email, #pwd: pwd, #name: name}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i6.Future<void>);
  @override
  _i6.Future<void> signInWithGoogle() =>
      (super.noSuchMethod(Invocation.method(#signInWithGoogle, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i6.Future<void>);
  @override
  _i6.Future<void> loginManual({String? email, String? pwd}) =>
      (super.noSuchMethod(
          Invocation.method(#loginManual, [], {#email: email, #pwd: pwd}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i6.Future<void>);
  @override
  _i6.Future<_i4.UserModel> checkUserLoggedIn() =>
      (super.noSuchMethod(Invocation.method(#checkUserLoggedIn, []),
              returnValue: Future<_i4.UserModel>.value(_FakeUserModel_2()))
          as _i6.Future<_i4.UserModel>);
  @override
  _i6.Future<void> signOut() =>
      (super.noSuchMethod(Invocation.method(#signOut, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i6.Future<void>);
  @override
  _i6.Future<void> sendTweet(
          {String? userId,
          String? email,
          String? name,
          String? profilePicture,
          _i7.TweetModel? mod}) =>
      (super.noSuchMethod(
          Invocation.method(#sendTweet, [], {
            #userId: userId,
            #email: email,
            #name: name,
            #profilePicture: profilePicture,
            #mod: mod
          }),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i6.Future<void>);
  @override
  _i6.Future<void> deleteTweet({_i7.TweetModel? mod}) =>
      (super.noSuchMethod(Invocation.method(#deleteTweet, [], {#mod: mod}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i6.Future<void>);
  @override
  _i6.Future<void> editedTweets(
          {_i7.TweetModel? newMod, _i7.TweetModel? oldMod}) =>
      (super.noSuchMethod(
          Invocation.method(
              #editedTweets, [], {#newMod: newMod, #oldMod: oldMod}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i6.Future<void>);
  @override
  _i6.Stream<_i7.UserAllTweetsModel> getUserTweets({String? userId}) =>
      (super.noSuchMethod(
              Invocation.method(#getUserTweets, [], {#userId: userId}),
              returnValue: Stream<_i7.UserAllTweetsModel>.empty())
          as _i6.Stream<_i7.UserAllTweetsModel>);
  @override
  _i6.Future<_i4.FirebaseUserModel> getUserProfile(String? id) =>
      (super.noSuchMethod(Invocation.method(#getUserProfile, [id]),
              returnValue: Future<_i4.FirebaseUserModel>.value(
                  _FakeFirebaseUserModel_3()))
          as _i6.Future<_i4.FirebaseUserModel>);
  @override
  String toString() => super.toString();
}
